defmodule Dotfiles.CLI do
  @moduledoc """
  CLI entrypoint
  """

  def main(args) do
    args
    |> parse_args
    |> case  do
	 {:ok, parsed} ->
	   
       end
  end

   defp parse_args(args) do
    opts = [
      strict: [items: :integer, emails: :integer, help: :boolean, file: :string],
      aliases: [i: :items, e: :emails, h: :helpm, f: :file]
    ]

    case OptionParser.parse(args, opts) do
      {parsed, _, invalid} when parsed != [] ->
        unless Enum.empty?(invalid), do: unknown_opts(invalid)

        {:ok, parsed}

      {[], _, invalid} ->
        invalid |> unknown_opts() |> default_error()
    end
  end
end